# Script de Deploy para CloudPanel - Sistema de Motores
# PowerShell Version - Deploy Simples
# Autor: Sistema de Relat√≥rios

Write-Host "===========================================" -ForegroundColor Cyan
Write-Host "üöÄ DEPLOY CLOUDPANEL - Sistema de Motores" -ForegroundColor Green
Write-Host "üåê Terminal - Deploy Automatizado" -ForegroundColor Yellow
Write-Host "===========================================" -ForegroundColor Cyan

# Solicitar informa√ß√µes do CloudPanel
Write-Host "Configura√ß√µes do CloudPanel:" -ForegroundColor Cyan
$cloudPanelUser = Read-Host "Usu√°rio SSH do CloudPanel"
$cloudPanelHost = Read-Host "Host/IP do servidor"
$cloudPanelPath = Read-Host "Caminho do projeto no servidor (ex: /home/cloudpanel/htdocs/seu-dominio.com)"
$cloudPanelDomain = Read-Host "Dom√≠nio do site (ex: seu-dominio.com)"

Write-Host ""
Write-Host "Configura√ß√µes:" -ForegroundColor Green
Write-Host "   üë§ Usu√°rio: $cloudPanelUser" -ForegroundColor White
Write-Host "   üåê Host: $cloudPanelHost" -ForegroundColor White
Write-Host "   üìÅ Caminho: $cloudPanelPath" -ForegroundColor White
Write-Host "   üîó Dom√≠nio: $cloudPanelDomain" -ForegroundColor White

$confirm = Read-Host "Confirmar e continuar? (y/n)"
if ($confirm -ne "y" -and $confirm -ne "Y") {
    Write-Host "Deploy cancelado." -ForegroundColor Red
    exit 0
}

Write-Host ""
Write-Host "Iniciando deploy..." -ForegroundColor Green

# 1. Testar conex√£o SSH
Write-Host "1. Testando conex√£o SSH..." -ForegroundColor Green
try {
    $sshTest = ssh -o ConnectTimeout=10 "$cloudPanelUser@$cloudPanelHost" "echo 'Conex√£o SSH OK'"
    if ($sshTest -eq "Conex√£o SSH OK") {
        Write-Host "   ‚úÖ Conex√£o SSH estabelecida" -ForegroundColor Green
    } else {
        Write-Host "   ‚ùå Falha na conex√£o SSH" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "   ‚ùå Erro na conex√£o SSH" -ForegroundColor Red
    Write-Host "   Verifique as credenciais e acesso SSH" -ForegroundColor Yellow
    exit 1
}

# 2. Backup do banco
Write-Host "2. Backup do banco de dados..." -ForegroundColor Green
$backupDbResponse = Read-Host "Criar backup do banco? (y/n)"
if ($backupDbResponse -eq "y" -or $backupDbResponse -eq "Y") {
    $timestamp = Get-Date -Format "yyyyMMdd_HHmmss"
    $backupFile = "backup_motores_" + $timestamp + ".sql"
    $backupCommand = "cd $cloudPanelPath && mysqldump -u appuser -p'M@rcelo1809@3033' relatodb > $backupFile"
    
    Write-Host "   - Executando backup..." -ForegroundColor Green
    ssh "$cloudPanelUser@$cloudPanelHost" $backupCommand
    Write-Host "   - Backup criado: $backupFile" -ForegroundColor Green
}

# 3. Deploy via Git
Write-Host "3. Deploy via Git..." -ForegroundColor Green
Write-Host "   - Atualizando c√≥digo..." -ForegroundColor Green
$gitCommands = @(
    "cd $cloudPanelPath",
    "git fetch origin",
    "git reset --hard origin/master",
    "git clean -fd"
)
$gitCommand = $gitCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $gitCommand
Write-Host "   - C√≥digo atualizado" -ForegroundColor Green

# 4. Configura√ß√£o do ambiente
Write-Host "4. Configurando ambiente..." -ForegroundColor Green
$envCommands = @(
    "cd $cloudPanelPath",
    "cp env-production.txt .env",
    "sed -i 's|https://seu-dominio.com|https://$cloudPanelDomain|g' .env",
    "php artisan key:generate --force"
)
$envCommand = $envCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $envCommand
Write-Host "   - Ambiente configurado" -ForegroundColor Green

# 5. Depend√™ncias
Write-Host "5. Instalando depend√™ncias..." -ForegroundColor Green
$depCommands = @(
    "cd $cloudPanelPath",
    "composer install --optimize-autoloader --no-dev",
    "npm ci",
    "npm run build"
)
$depCommand = $depCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $depCommand
Write-Host "   - Depend√™ncias instaladas" -ForegroundColor Green

# 6. Migra√ß√µes
Write-Host "6. Executando migra√ß√µes..." -ForegroundColor Green
$migrateCommands = @(
    "cd $cloudPanelPath",
    "php artisan migrate --force"
)
$migrateCommand = $migrateCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $migrateCommand
Write-Host "   - Migra√ß√µes executadas" -ForegroundColor Green

# 7. Otimiza√ß√µes
Write-Host "7. Aplicando otimiza√ß√µes..." -ForegroundColor Green
$optimizeCommands = @(
    "cd $cloudPanelPath",
    "php artisan storage:link",
    "php artisan cache:clear",
    "php artisan config:clear",
    "php artisan route:clear",
    "php artisan view:clear",
    "php artisan config:cache",
    "php artisan route:cache",
    "php artisan view:cache"
)
$optimizeCommand = $optimizeCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $optimizeCommand
Write-Host "   - Otimiza√ß√µes aplicadas" -ForegroundColor Green

# 8. Permiss√µes
Write-Host "8. Configurando permiss√µes..." -ForegroundColor Green
$permCommands = @(
    "cd $cloudPanelPath",
    "chmod -R 755 storage bootstrap/cache",
    "chmod -R 775 storage/app/public",
    "mkdir -p storage/app/public/motores"
)
$permCommand = $permCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $permCommand
Write-Host "   - Permiss√µes configuradas" -ForegroundColor Green

# 9. Verifica√ß√µes
Write-Host "9. Verifica√ß√µes finais..." -ForegroundColor Green
$checkCommands = @(
    "cd $cloudPanelPath",
    "php artisan migrate:status",
    "ls -la app/Models/Motor.php",
    "ls -la app/Http/Controllers/MotorController.php"
)
$checkCommand = $checkCommands -join " && "
ssh "$cloudPanelUser@$cloudPanelHost" $checkCommand
Write-Host "   - Verifica√ß√µes conclu√≠das" -ForegroundColor Green

# 10. Informa√ß√µes finais
Write-Host ""
Write-Host "===========================================" -ForegroundColor Cyan
Write-Host "‚úÖ DEPLOY NO CLOUDPANEL CONCLU√çDO!" -ForegroundColor Green
Write-Host "===========================================" -ForegroundColor Cyan
Write-Host ""

Write-Host "üåê Informa√ß√µes do deploy:" -ForegroundColor Cyan
Write-Host "   üîó URL: https://$cloudPanelDomain" -ForegroundColor White
Write-Host "   üöó Motores: https://$cloudPanelDomain/motores" -ForegroundColor White
Write-Host "   üìÅ Caminho: $cloudPanelPath" -ForegroundColor White
Write-Host "   üë§ Usu√°rio: $cloudPanelUser" -ForegroundColor White

Write-Host ""
Write-Host "üß™ Testes recomendados:" -ForegroundColor Cyan
Write-Host "   1. Acessar: https://$cloudPanelDomain" -ForegroundColor White
Write-Host "   2. Login: admin@sistema.com / admin123" -ForegroundColor White
Write-Host "   3. Testar: https://$cloudPanelDomain/motores" -ForegroundColor White
Write-Host "   4. Criar um motor de teste" -ForegroundColor White
Write-Host "   5. Testar filtros e upload" -ForegroundColor White

Write-Host ""
Write-Host "üîß Comandos √∫teis:" -ForegroundColor Cyan
Write-Host "   - SSH: ssh $cloudPanelUser@$cloudPanelHost" -ForegroundColor White
Write-Host "   - Logs: tail -f $cloudPanelPath/storage/logs/laravel.log" -ForegroundColor White
Write-Host "   - Cache: cd $cloudPanelPath && php artisan cache:clear" -ForegroundColor White

Write-Host ""
Write-Host "Deploy finalizado! Sistema de motores ativo no CloudPanel. üöÄ" -ForegroundColor Green 