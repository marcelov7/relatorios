#!/bin/bash
# Script de Diagn√≥stico R√°pido - Imagens CloudPanel

echo "üñºÔ∏è === DIAGN√ìSTICO R√ÅPIDO - SISTEMA DE IMAGENS ==="
echo
echo "üìç Diret√≥rio atual: $(pwd)"
echo

# 1. Verificar estrutura de diret√≥rios
echo "üìÅ 1. Estrutura de diret√≥rios:"
echo "   storage/app/public: $([ -d "storage/app/public" ] && echo "‚úÖ OK" || echo "‚ùå AUSENTE")"
echo "   storage/app/public/relatorios: $([ -d "storage/app/public/relatorios" ] && echo "‚úÖ OK" || echo "‚ùå AUSENTE")"
echo "   storage/app/public/relatorios/thumbs: $([ -d "storage/app/public/relatorios/thumbs" ] && echo "‚úÖ OK" || echo "‚ùå AUSENTE")"
echo "   public/storage: $([ -d "public/storage" ] && echo "‚úÖ OK" || echo "‚ùå AUSENTE")"
echo "   public/storage/relatorios: $([ -d "public/storage/relatorios" ] && echo "‚úÖ OK" || echo "‚ùå AUSENTE")"

# 2. Verificar link simb√≥lico
echo
echo "üîó 2. Link simb√≥lico:"
if [ -L "public/storage" ]; then
    echo "   ‚úÖ Link existe: public/storage -> $(readlink public/storage)"
else
    echo "   ‚ùå Link simb√≥lico AUSENTE"
fi

# 3. Verificar permiss√µes
echo
echo "üîê 3. Permiss√µes:"
if [ -d "storage/app/public" ]; then
    echo "   storage/app/public: $(stat -c %a storage/app/public)"
fi
if [ -d "public/storage" ]; then
    echo "   public/storage: $(stat -c %a public/storage)"
fi

# 4. Contar imagens
echo
echo "üñºÔ∏è 4. Imagens existentes:"
if [ -d "storage/app/public/relatorios" ]; then
    IMG_COUNT=$(find storage/app/public/relatorios -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" 2>/dev/null | wc -l)
    echo "   üì∑ Imagens em storage: $IMG_COUNT"
else
    echo "   üì∑ Diret√≥rio de imagens n√£o existe"
fi

if [ -d "public/storage/relatorios" ]; then
    PUB_COUNT=$(find public/storage/relatorios -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" 2>/dev/null | wc -l)
    echo "   üåê Imagens em public: $PUB_COUNT"
else
    echo "   üåê Diret√≥rio p√∫blico n√£o existe"
fi

# 5. Testar URL de exemplo
echo
echo "üåê 5. Teste de URL:"
if [ -d "public/storage/relatorios" ] && [ "$(ls -A public/storage/relatorios 2>/dev/null)" ]; then
    SAMPLE_IMG=$(find public/storage/relatorios -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" | head -1)
    if [ -n "$SAMPLE_IMG" ]; then
        REL_PATH=${SAMPLE_IMG#public/}
        echo "   üìù URL de teste: https://app.devaxis.com.br/$REL_PATH"
        echo "   üìÅ Arquivo f√≠sico: $SAMPLE_IMG"
        echo "   üìè Tamanho: $(stat -c %s "$SAMPLE_IMG" 2>/dev/null || echo "erro") bytes"
    fi
fi

echo
echo "üîß COMANDOS DE CORRE√á√ÉO SUGERIDOS:"
echo

# Verificar se precisa criar link
if [ ! -L "public/storage" ]; then
    echo "   # Criar link simb√≥lico:"
    echo "   php artisan storage:link"
    echo
fi

# Verificar se precisa criar diret√≥rios
if [ ! -d "storage/app/public/relatorios" ]; then
    echo "   # Criar diret√≥rios:"
    echo "   mkdir -p storage/app/public/relatorios/thumbs"
    echo "   mkdir -p storage/app/public/atualizacoes"
    echo
fi

# Permiss√µes
echo "   # Ajustar permiss√µes:"
echo "   chmod -R 775 storage/app/public"
echo "   chmod -R 775 public/storage"
echo "   chown -R www-data:www-data storage/"
echo "   chown -R www-data:www-data public/storage/"
echo

# Sincronizar imagens
echo "   # Sincronizar imagens existentes:"
echo "   cp -r storage/app/public/relatorios/* public/storage/relatorios/ 2>/dev/null || echo 'Sem imagens para copiar'"
echo

echo "‚úÖ Diagn√≥stico conclu√≠do!"
